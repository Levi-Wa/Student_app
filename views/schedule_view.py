import flet as ft
import httpx

# ‚úçÔ∏è –¢—É—Ç –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–∏ –≥—Ä—É–ø–ø—ã –∏ –∏—Ö ID
GROUPS_BY_COURSE = {
    "1": {
        "–ò–î-101": 26616,
        "–ò–î-102": 26617
    },
    "2": {
        "–ò–î-201": 26618
    },
    "3": {
        "–ò–î-301": 26619
    },
    "4": {
        "–ò–î-401": 26620
    }
}

class ScheduleTab(ft.Column):
    def __init__(self):
        super().__init__()

        self.course_dropdown = ft.Dropdown(
            label="–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å",
            options=[ft.dropdown.Option(str(i)) for i in range(1, 5)],
            on_change=self.on_course_change
        )

        self.group_checkboxes_container = ft.Column()

        self.schedule_output = ft.Text("–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É, —á—Ç–æ–±—ã –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")

        self.controls = [
            ft.Text("üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", size=24, weight="bold"),
            self.course_dropdown,
            self.group_checkboxes_container,
            self.schedule_output
        ]

    def on_course_change(self, e):
        self.group_checkboxes_container.controls.clear()

        course = self.course_dropdown.value
        groups = GROUPS_BY_COURSE.get(course, {})

        for group_name, group_id in groups.items():
            checkbox = ft.Checkbox(label=group_name, on_change=self.on_group_checkbox)
            checkbox.data = group_id  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º ID –≥—Ä—É–ø–ø—ã –≤ –ø–æ–ª–µ data
            self.group_checkboxes_container.controls.append(checkbox)

        self.schedule_output.value = "–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É, —á—Ç–æ–±—ã –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"
        self.group_checkboxes_container.update()
        self.update()

    def on_group_checkbox(self, e):
        selected_ids = [
            cb.data
            for cb in self.group_checkboxes_container.controls
            if cb.value
        ]

        if not selected_ids:
            self.schedule_output.value = "–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –≥—Ä—É–ø–ø—É"
            self.update()
            return

        self.schedule_output.value = "–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è..."
        self.update()
        self.load_schedules(selected_ids)

    def load_schedules(self, group_ids):
        all_schedules = ""

        for group_id in group_ids:
            try:
                url = f"https://api.ursei.su/public/schedule/rest/GetGsSched?grpid={group_id}"
                response = httpx.get(url, timeout=10)
                data = response.json()

                all_schedules += f"\nüìò –ì—Ä—É–ø–ø–∞ ID: {group_id}\n"
                for day in data.get("data", []):
                    all_schedules += f"\nüìÖ {day['day']}\n"
                    for lesson in day["schedule"]:
                        time = lesson.get("time", "")
                        subject = lesson.get("subject", "")
                        all_schedules += f"  ‚è∞ {time} ‚Äî {subject}\n"

            except Exception as ex:
                all_schedules += f"\n‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –≥—Ä—É–ø–ø—ã {group_id}: {ex}\n"

        self.schedule_output.value = all_schedules or "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
        self.update()
